#!/usr/bin/env bash
# vim: set ft=bash:
#
# Copyright 2024 Ian Lewis
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -euo pipefail

# project-windowizer splits the current tmux window into two panes. The left
# pane is sized to 80 columns. The right pane is size to fill the rest of the
# window and runs the command provided as an argument. If no command is
# provided, it defaults to running `nvim`.

function _main() {
    # These variables are used by the argsparse library.
    local program_params
    local argsparse_usage_description

    # shellcheck source=/dev/null
    . "${HOME}/.local/share/bash/lib/bash-argsparse/argsparse.sh"

    # Command is optional and could contain many parts.
    argsparse_describe_parameters "COMMAND*"

    # Options are not required.
    argsparse_allow_no_argument "true"

    # shellcheck disable=SC2034 # Used by argsparse.
    argsparse_usage_description="Split the current tmux window."

    # Command line parsing is done here.
    argsparse_parse_options "$@"

    if [[ -z ${TMUX+x} ]]; then
        echo "This script requires tmux to be running." >&2
        exit 1
    fi

    local pw_cmd=("${program_params[@]:-"nvim"}")

    # Calculate the nuw size by subtracting 80 columns from the current window
    # width.
    local tmux_window_width
    tmux_window_width=$(tmux display-message -p "#{window_width}")
    local new_window_size=$((tmux_window_width - 80))

    # Run the command in the right pane, defaulting to `nvim`.
    # Explicitly start nvim in an interactive bash shell to ensure the command
    # runs with a full terminal environment.
    local full_cmd="bash -i -c '${pw_cmd[*]}'"

    # If the user explicitly passed "bash" as the first argument, run bash
    # directly instead of wrapping it in another bash shell.
    if [[ ${program_params[0]:-""} == "bash" ]]; then
        full_cmd="${program_params[*]}"
    fi

    tmux split-window -hd -l "${new_window_size}" "${full_cmd}"

    # clear the left window
    clear
}

_main "$@"
