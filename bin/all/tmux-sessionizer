#!/usr/bin/env bash
# vim: set ft=bash:
#
# Copyright 2024 Ian Lewis
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -euo pipefail

function _main() {
    # These variables are used by the argsparse library.
    local program_params
    local program_options

    # argsparse_usage_description is used by the argsparse library.
    local argsparse_usage_description

    # shellcheck source=/dev/null
    . "${HOME}/.local/share/bash/lib/bash-argsparse/argsparse.sh"

    argsparse_use_option "dir" "Project source directory." "value" "default:${HOME}/src" "short:d" "type:directory"
    argsparse_use_option "windows" "Number of tmux windows to open." "value" "default:1" "short:w" "type:uint"
    # Project directories are GitHub style <user>/<repo> thus default depth of 2.
    argsparse_use_option "mindepth" "Minimum directory search depth." "value" "default:2" "short:m" "type:uint"
    argsparse_use_option "maxdepth" "Maximum directory search depth." "value" "default:2" "short:x" "type:uint"

    argsparse_describe_parameters "[ QUERY ]"
    # QUERY is optional.
    argsparse_minimum_parameters 0

    # Options are not required.
    argsparse_allow_no_argument "true"

    # shellcheck disable=SC2034
    argsparse_usage_description="Open a new tmux session for a project."

    # Command line parsing is done here.
    argsparse_parse_options "$@"

    local query=${program_params[0]:-""}

    local selected
    local selected_name
    local tmux_running

    selected=$(find \
        ~/src \
        -mindepth "${program_options['mindepth']}" \
        -maxdepth "${program_options['maxdepth']}" \
        -type d | fzf --query="${query}")

    if [[ -z ${selected} ]]; then
        exit 0
    fi

    selected_name=$(basename "$selected" | tr . _)
    tmux_running=$(pgrep tmux)

    # Session name can't be a number so add a trailing underscore.
    if [[ ${selected_name} =~ ^[0-9]+$ ]]; then
        selected_name="${selected_name}_"
    fi

    if [[ -z $TMUX ]] && [[ -z ${tmux_running} ]]; then
        tmux new-session -s "${selected_name}" -c "${selected}"
        # NOTE: new-session opens the first window.
        for ((i = 2; i <= program_options['windows']; i++)); do
            tmux new-window -dt "${selected_name}" -c "${selected}"
        done
        exit 0
    fi

    if ! tmux has-session -t="${selected_name}" 2>/dev/null; then
        tmux new-session -ds "${selected_name}" -c "${selected}"
        # NOTE: new-session opens the first window.
        for ((i = 2; i <= program_options['windows']; i++)); do
            tmux new-window -dt "${selected_name}" -c "${selected}"
        done
    fi

    if [[ -z $TMUX ]]; then
        tmux attach -t "${selected_name}"
    else
        tmux switch-client -t "${selected_name}"
    fi
}

_main "$@"
